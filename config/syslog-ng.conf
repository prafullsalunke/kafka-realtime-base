@version: 4.1
@include "scl.conf"

# Global options
options {
    chain_hostnames(off);
    flush_lines(0);
    use_dns(no);
    use_fqdn(no);
    owner("root");
    group("adm");
    perm(0640);
    stats_freq(0);
    bad_hostname("^gconfd$");
};

# Source definitions
source s_local {
    system();
    internal();
};

source s_network {
    network(
        transport("udp")
        port(514)
    );
    network(
        transport("tcp")
        port(514)
    );
};

# Destination definitions
destination d_kafka {
    file("/var/log/syslog-ng/kafka.log" 
        template("$DATE $HOST $PROGRAM[$PID]: $MSG\n")
        template_escape(no)
    );
};

destination d_kafka_ui {
    file("/var/log/syslog-ng/kafka-ui.log"
        template("$DATE $HOST $PROGRAM[$PID]: $MSG\n")
        template_escape(no)
    );
};

destination d_syslog_ng {
    file("/var/log/syslog-ng/syslog-ng.log"
        template("$DATE $HOST $PROGRAM[$PID]: $MSG\n")
        template_escape(no)
    );
};

destination d_console {
    file("/dev/stdout"
        template("$DATE $HOST $PROGRAM[$PID]: $MSG\n")
        template_escape(no)
    );
};

# Filter definitions
filter f_kafka {
    program("kafka") or host("kafka");
};

filter f_kafka_ui {
    program("kafka-ui") or host("kafka-ui");
};

filter f_syslog_ng {
    program("syslog-ng");
};

# Log paths
log {
    source(s_local);
    source(s_network);
    filter(f_kafka);
    destination(d_kafka);
    destination(d_console);
};

log {
    source(s_local);
    source(s_network);
    filter(f_kafka_ui);
    destination(d_kafka_ui);
    destination(d_console);
};

log {
    source(s_local);
    source(s_network);
    filter(f_syslog_ng);
    destination(d_syslog_ng);
    destination(d_console);
};

# Default log path for everything else
log {
    source(s_local);
    source(s_network);
    destination(d_console);
}; 